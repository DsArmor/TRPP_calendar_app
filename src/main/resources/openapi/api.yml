openapi: 3.0.3

info:
  title: Calendar application
  description: project that will help you to manage your time
  version: 1.0.0

servers:
  - url: "localhost:{port}/{basePath}"
    description: local server
    variables:
      port:
        default: '8080'
      basePath:
        default: 'api/v1'

paths:
  /users:
    post:
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      description: create an user
      responses:
        '200':
          description: user is created
          content:
            application/json:
              schema:
                required:
                  - id
                properties:
                  id:
                    type: integer
                    format: int64
                    description: id of saved user
        '400':
          $ref: '#/components/responses/Error'
        '403':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
    get:
      operationId: getUsers
      description: get all users
      responses:
        '200':
          description: list of all users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'
        '400':
          $ref: '#/components/responses/Error'
        '403':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
  /users/{userId}:
    get:
      operationId: getUserById
      description: get user by id
      responses:
        '200':
          description: specified user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          $ref: '#/components/responses/Error'
        '403':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
    delete:
      operationId: deleteUserById
      description: delete user by id
      responses:
        '200':
          description: user is deleted
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '403':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
    parameters:
      - name: userId
        description: user id
        required: true
        in: path
        schema:
          type: integer
          format: int64
  /meeting:
    post:
      operationId: createMeeting
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeetingRequest'
      description: create a meeting
      responses:
        '200':
          description: meeting is created
          content:
            application/json:
              schema:
                required:
                  - id
                properties:
                  id:
                    type: integer
                    description: id of saved meeting
        '400':
          $ref: '#/components/responses/Error'
        '403':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
    get:
      operationId: getMeetings
      description: get all meeting
      responses:
        '200':
          description: list of all meetings
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MeetingResponse'
        '400':
          $ref: '#/components/responses/Error'
        '403':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'


components:
  schemas:
    UserRequest:
      type: object
      required:
        - email
        - password
        - firstName
        - lastName
      properties:
        email:
          type: string
          pattern: '^(.+)@(.+)$'
        password:
          type: string
          minLength: 8
        firstName:
          type: string
          minLength: 1
        middleName:
          type: string
          minLength: 1
        lastName:
          type: string
          minLength: 1
    UserResponse:
      required:
        - id
        - email
        - firstName
        - lastName
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
        firstName:
          type: string
        middleName:
          type: string
        lastName:
          type: string
    MeetingRequest:
      type: object
      required:
        - name
        - beginDateTime
        - endDateTime
        - ownerId
      properties:
        name:
          type: string
          minLength: 1
        beginDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
        location:
          type: string
          minLength: 1
        description:
          type: string
          minLength: 1
        ownerId:
          type: integer
          format: int64
    MeetingResponse:
      required:
        - id
        - name
        - beginDateTime
        - endDateTime
        - owner
        - ownerId
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        beginDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
        location:
          type: string
        description:
          type: string
        owner:
          $ref: '#/components/schemas/UserResponse'
        ownerId:
          type: integer
          format: int64
    ErrorResponse:
      description: Error with a message
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: Error message
          minLength: 1
  responses:
    Error:
      description: Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'